const express = require('express');
const ExcelJS = require('exceljs');
const cors = require('cors');

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.json());
app.use(cors());

// Health check endpoint
app.get('/', (req, res) => {
    res.json({ 
        status: 'Excel Generator Plugin Server is running',
        version: '1.0.0',
        endpoints: ['/excel-generator/generate']
    });
});

// Main Excel generation endpoint
app.post('/excel-generator/generate', async (req, res) => {
    try {
        const { data, headers, sheetName = 'Sheet1', filename = 'generated_file.xlsx' } = req.body;
        
        // Create workbook and worksheet
        const workbook = new ExcelJS.Workbook();
        const worksheet = workbook.addWorksheet(sheetName);
        
        // Add headers if provided
        if (headers && Array.isArray(headers)) {
            worksheet.addRow(headers);
            
            // Style headers
            const headerRow = worksheet.getRow(1);
            headerRow.font = { bold: true };
            headerRow.fill = {
                type: 'pattern',
                pattern: 'solid',
                fgColor: { argb: 'FFE0E0E0' }
            };
        }
        
        // Add data rows if provided
        if (data && Array.isArray(data)) {
            data.forEach(row => {
                if (Array.isArray(row)) {
                    worksheet.addRow(row);
                } else if (typeof row === 'object') {
                    // If row is an object, convert to array based on headers
                    if (headers) {
                        const rowArray = headers.map(header => row[header] || '');
                        worksheet.addRow(rowArray);
                    } else {
                        // Convert object values to array
                        worksheet.addRow(Object.values(row));
                    }
                }
            });
        }
        
        // Auto-fit columns
        worksheet.columns.forEach(column => {
            let maxLength = 0;
            column.eachCell({ includeEmpty: true }, (cell) => {
                const columnLength = cell.value ? cell.value.toString().length : 10;
                if (columnLength > maxLength) {
                    maxLength = columnLength;
                }
            });
            column.width = Math.min(maxLength + 2, 50);
        });
        
        // Set response headers
        res.setHeader('Content-Type', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        res.setHeader('Content-Disposition', `attachment; filename="${filename}"`);
        res.setHeader('Access-Control-Allow-Origin', '*');
        
        // Generate and send the file
        await workbook.xlsx.write(res);
        res.end();
        
    } catch (error) {
        console.error('Error generating Excel file:', error);
        res.status(500).json({ 
            error: 'Failed to generate Excel file',
            message: error.message 
        });
    }
});

// Error handling middleware
app.use((error, req, res, next) => {
    console.error('Server error:', error);
    res.status(500).json({ 
        error: 'Internal server error',
        message: error.message 
    });
});

app.listen(PORT, () => {
    console.log(`Excel Generator Plugin Server is running on port ${PORT}`);
    console.log(`Health check: http://localhost:${PORT}/`);
    console.log(`Excel endpoint: http://localhost:${PORT}/excel-generator/generate`);
});